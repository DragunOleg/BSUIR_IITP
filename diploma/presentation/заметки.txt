МОБИЛЬНОЕ ПРИЛОЖЕНИЕ ДЛЯ РЕШЕНИЯ ЗАДАЧ ПОИСКА ОПТИМАЛЬНОГО МАРШРУТА МЕЖДУ ГОРОДАМИ
Мобильное приложение для решения задач поиска оптимального маршрута между городами

Общее количество листов пояснительной записки без учета приложений
справочного или информационного характера, как правило, составляет 60–80
страниц печатного текста, 
технико-экономического обоснования – не более 18 % (10.8-14.4)
охраны труда или экологической безопасности – не более 5–7 %(3-5.6)

Чертежи : ПД 1-2-3
1) СА Генетический алгоритм. Схема алгоритма 
2) СД Генетический алгоритм. Схема данных
3) СД Мобильное приложение. Схема данных
Плакаты: ПЛ 1-2-3
1) Графический интерфейс приложения. Экран выбора городов
2) Графический интерфейс приложения. Экран карты
3) Графический интерфейс приложения. Экран маршрутов

Преза:
5) Генетика.
Ген это один город. Перестановочное кодирование
Хромосома эта набор генов. Первый это стартовая точка, последний это конечная.
Популяция (поколение) ограниченный набор хромосом, например 200.
Элитизм 1.

Какие параметры брал:
Такими нехитрыми манипуляциями полный перебор задачи из 50 будет 50 факториал, а у меня такое-то число.
Результат работы записан на видео

Схема ГА. 
Установка параметров + значения
Инициализация в классическом варианте набирает первое поколение случайным.
Есть улучшение, которое применил, могу объяснить, если кому-то из комиссии интересна
улучшенная инициализация.
Критерий остановки - 2000, планирую улучшить

6) Откуда расстояния, билли?
Матрицу расстояний/времени по дорогам
Платное distance matrix API, на рынке разные, выбрал Microsoft, которые дают 600000 пар в год
для non-commerce, либо до запуска в продашкн. Если говорить о запуске в продашкн,
3500$ за год и 2400000 точек. 
~300$/мес за 200 000 точек. У гугла это вот так, плюс они сразу берут деньги 
~900$/мес за 200 000 точек. Ходят слухи, что там точность дорожной дистанции/времени выше.
Много это или мало? 100 городов = 10000. 200 пользователей
тут нужна детальная проработка ограничений по кастомным пользовательским точкам. 

Ключевые слова на слайдах:
0) Добрый день, уважаемая комиссия. Я, тема проекта
2) Агенда: Сегодня рассмотрим вопросы
3) Введение: Проблема (условный OZ.by и булочные), цель, проект выполнен как начало продукта. 
4) Вещи, закладывать: темная тема, локализация (eng default, ru, by)
5) Dynamic colors, в руках 11
6) Города: Экран выбора точек формирует задачу, можно выбрать или отменить группу, выбрать или отменить
индивидуальный город. Выбрать начало пути и конец пути, при кольце- коммивояжер.
7) Карта: Экран карты имеет одну главную кнопку и показывает текущую популяцию для демонстрации,
а также лучшую хромосому.
8) Маршруты: После решения задачи сохраняем полученный маршрут, где все подмаршруты ведут
в навигатор (яндекс, гугл, браузер гугл) и сохраняют однажды кликнутый маршрут, что удобно.
Также подсчитывается точное оставшееся расстояние непосещенных подмаршрутов, и примерное время в пути
9) Схема алгоритма: инициализация, начальная популяция в классическом варианте
10) Кодирование: у нас применяется, заметить дорожное, а не прямое
11) Селекция: турнир, 80% берем лучшего, 20% берем случайного из 5
12) Скрещивание: турниром выбираем родителя 2, и order crossover
13) Мутация: применены обе с шансом 50/50
14) Параметры: Резюмируя. Элитизм 1
Если монета выпала на параметр скрещивания, турниром выбираем родителя 2 и скрещиваем их так-то.
Нет-оставляем родителя 1.
Если монета выпала на параметр мутации, мутируем родителя или результат скрещивания двух.
Готово, подобным образом формируем следующее поколение.
15) Полный перебор:
16) Матрица расстояний: Много ли 200000? 100 городов, 200 пользователей. Microsoft молодец
17) Планы по развитию
18) Спасибо консультантам от кафедры за помощь в оформлении.
Доклад окончен, спасибо за внимание, готов ответить на вопросы.

